1. Otimização da estratégia e benchmarking
Bem vindo de volta!

2. Como decidir os valores dos parâmetros de entrada?
Nas lições anteriores, criamos e testamos várias estratégias de negociação. Mas ao implementar uma estratégia, como determinamos os valores dos parâmetros de entrada? Por exemplo, quando construímos o sinal com base no preço e na comparação SMA, qual é o período de lookback SMA que devemos usar? Um SMA de 10, 20 ou 50 períodos pode resultar em uma estratégia mais lucrativa? A solução é conduzir a otimização da estratégia, que é o processo de testar uma gama de valores de parâmetros de entrada para encontrar aqueles que oferecem melhor desempenho da estratégia com base em dados históricos.

3. Exemplo de otimização de estratégia
Vejamos um exemplo de otimização de estratégia de desempenho. Na lição 1 deste capítulo, implementamos uma estratégia baseada em uma comparação de preços e SMA. Para localizar o período de lookback do SMA que pode otimizar o desempenho da estratégia, queremos executar vários backtests variando os parâmetros do período de tempo do SMA em execuções diferentes. Para tornar o código reutilizável, definiremos uma função Python. Uma função é um bloco de código reutilizável que é executado quando é chamado. Você pode passar dados para uma função. Uma função também pode retornar dados como resultado. Se você tem interesse em saber mais sobre o assunto, confira o curso do DataCamp. Aqui definimos uma função signal_strategy que empacota o processo de implementação da estratégia. Após a estratégia de sinal def, podemos passar uma série de parâmetros em um cabeçalho de função que nossa função aceitará. Podemos passar o período como um parâmetro para alterar o período de lookback do SMA. Além disso, podemos passar o ticker da bolsa, a data de início e a data de término para executar backtests em diferentes ações e em diferentes períodos históricos. Observe que, ao especificar um valor de um parâmetro no cabeçalho, definimos um argumento padrão que será usado se um argumento não for passado. Por exemplo, aqui definimos os parâmetros de início e término com datas padrão. Dentro do corpo da função, nosso código pode então usar os valores que esses parâmetros assumem quando a função é chamada. Por último, usamos a palavra-chave return para retornar o backtest sempre que a função é chamada. Observe que, ao especificar um valor de um parâmetro no cabeçalho, definimos um argumento padrão que será usado se um argumento não for passado. Por exemplo, aqui definimos os parâmetros de início e término com datas padrão. Dentro do corpo da função, nosso código pode usar os valores que esses parâmetros assumem quando a função é chamada. Por último, usamos a palavra-chave return para retornar o backtest sempre que a função é chamada. Observe que, ao especificar um valor de um parâmetro no cabeçalho, definimos um argumento padrão que será usado se um argumento não for passado. Por exemplo, aqui definimos os parâmetros de início e término com datas padrão. Dentro do corpo da função, nosso código pode então usar os valores que esses parâmetros assumem quando a função é chamada. Por último, usamos a palavra-chave return para retornar o backtest sempre que a função é chamada.

1 www.datacamp.com/courses/writing-functions-in-python
4. Exemplo de otimização de estratégia
Em seguida, podemos chamar a função várias vezes para passar diferentes parâmetros de lookback do SMA. Cada função retornará um backtest bt. Chame bt dot run para executar todos os Backtests de uma vez e plotar os resultados em um gráfico para facilitar a comparação. No gráfico, podemos ver que o uso do SMA de 20 períodos nos dá a estratégia mais lucrativa com base no período histórico testado novamente.

5. O que é um benchmark?
Um benchmark é um padrão ou ponto de referência contra o qual uma estratégia pode ser comparada ou avaliada. Por exemplo, uma estratégia que usa sinais para negociar ações ativamente pode usar uma estratégia passiva de compra e manutenção como referência. Um benchmark também pode ser escolhido com base nos segmentos de mercado e perfis de risco de ativos. Por exemplo, o índice S&P 500 é frequentemente usado como referência para o desempenho das ações dos EUA, e os títulos do Tesouro dos EUA são usados ​​para medir riscos e retornos de títulos.

6. Exemplo de benchmarking
Continue o exemplo anterior, vamos definir um benchmark. Em vez de usar uma estratégia baseada em sinais para negociar ativamente uma ação, manteremos passivamente a ação e usaremos seu desempenho como referência. Defina uma função separada para descrever o benchmark. Use bt algos RunOnce para implementar uma estratégia passiva, que é comprar uma ação no início do período e apenas segurar até o final do período.

7. Exemplo de benchmarking
Em seguida, chame a função para criar um backtest bt. Da mesma forma, podemos usar bt dot run para executar vários backtests e plotar seus resultados juntos. Os resultados parecem interessantes. Eles sugerem que algumas estratégias ativas tiveram um desempenho superior ao do benchmark, enquanto algumas tiveram um desempenho inferior.

8. Vamos praticar!
Fantástico! Agora é sua vez de praticar!