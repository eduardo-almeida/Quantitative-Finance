1. Importâncias de recursos e aumento de gradiente
Vamos encerrar com mais algumas coisas para os métodos baseados em árvore: importâncias de recursos e aumento de gradiente.

2. Importâncias do recurso
Todos os métodos baseados em árvore nos permitem obter "importâncias de recursos". Essas são pontuações que representam o quanto cada recurso contribui para uma previsão. Para regressão, é quanto cada recurso pode ajudar a reduzir a variância ao dividir os dados. As variáveis ​​dos dias da semana são preditores muito fracos, portanto, não reduzem muito a variância. Isso significa que a importância de seus recursos é baixa, portanto, podemos descartar esses recursos.

3. Boas características
Outros recursos, como a média móvel simples de 200 dias, são melhores na redução da variação dos dados - portanto, eles terão pontuações mais altas na escala de importância do recurso.

4. Extraindo importâncias de recursos
Uma vez que ajustamos um modelo como uma floresta aleatória, podemos extrair as importâncias do recurso. Isso é armazenado em uma propriedade sem surpresa chamada feature_importances_. Os valores se alinham com as colunas de recursos nos dados de treinamento que fornecemos ao modelo.

5. Classificação e plotagem
Para traçar as importâncias dos recursos de uma maneira limpa, queremos classificá-los do maior para o menor. Para fazer isso, usaremos argsort () de numpy, que retorna os índices dos menores aos maiores elementos de um array ou lista. Em seguida, usamos a indexação embutida do Python para reverter a lista. Isso funciona definindo um início, uma parada e um passo entre colchetes, todos separados por dois pontos. Para reverter uma lista, deixamos o início e o fim em branco e, a seguir, colocamos -1 para o passo. Queremos então plotar as importâncias do recurso como um gráfico de barra. Criamos variáveis ​​para as posições x a partir do comprimento das importâncias e, em seguida, criamos rótulos de escala de feature_names usando o índice classificado. Finalmente, plotamos o gráfico de barras com as importâncias classificadas e os nomes dos recursos como rótulos de escala. Como os nomes dos recursos são longos, nós os giramos para que fiquem na vertical.

6. Traçando importâncias de recursos
Agora que temos as importâncias dos recursos plotadas, podemos aprender quais recursos realmente importam. Nesse caso, os dias da semana são preditores muito fracos e podemos descartá-los. Mas os indicadores de 200 dias parecem ser muito úteis.

7. Modelos lineares vs aumento de gradiente
Para aumentar o gradiente. Meu gráfico favorito para aumento de gradiente é este, que vem de um blog Kaggle.com. Se os modelos lineares são um Toyota Camry, o aumento de gradiente é um helicóptero Black Hawk. Os modelos lineares são modelos excelentes e simples, fáceis de usar e entender. Os modelos impulsionados têm potencial para funcionar muito melhor, mas também são muito mais difíceis de usar e interpretar.

8. Modelos impulsionados
Modelos impulsionados são uma classe geral de modelos de aprendizado de máquina. Elas funcionam ajustando modelos iterativamente, como árvores de decisão, aos dados. O aumento de gradiente funciona ajustando uma árvore e, em seguida, ajustando outra árvore aos erros residuais da primeira. Em seguida, ajustamos outra árvore aos erros da mais recente e assim por diante.

9. Modelos impulsionados
Há outro modelo além do aumento de gradiente que você também pode usar, que é o adaboost. Neste curso, veremos apenas o aumento de gradiente e não adaboost. Todos os modelos impulsionados funcionam de maneira semelhante, ajustando os modelos de forma iterativa para obter previsões aprimoradas.

10. Ajustando um modelo de aumento de gradiente
A biblioteca sklearn tem uma implementação de aumento de gradiente. Nós o criamos e ajustamos da mesma forma que qualquer outro modelo sklearn. Os modelos com gradiente aumentado têm muitos hiperparâmetros e não vamos examiná-los aqui. No entanto, defini os hiperparâmetros com configurações decentes no exercício de codificação, para que você possa ter uma ideia de como alguns deles podem ser.

11. Seja impulsionado!
Agora que sabemos como, vamos examinar as importâncias dos recursos e ajustar um modelo de aumento de gradiente.